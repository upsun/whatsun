# Analyze package managers.
package_managers:
  max_depth: 2
  rules:
    npm-lockfile:
      when: file.exists("package-lock.json")
      then: npm
      group: js
      exclusive: true
    yarn-lockfile:
      when: file.exists("yarn.lock")
      then: yarn
      group: js
      exclusive: true
    pnpm-lockfile:
      when: file.exists("pnpm-lock.yaml")
      then: pnpm
      group: js
      exclusive: true
    bun-lockfile:
      when: file.exists("bun.lock") || file.exists("bun.lockb")
      then: bun
      group: js
      exclusive: true
    js-packages:
      when: file.exists("package.json")
      maybe: [npm, pnpm, yarn, bun]
      group: js

    composer:
      when: file.exists("composer.json")
      then: composer

    pip:
      when: file.exists("requirements.txt")
      then: pip

    pipenv:
      when: file.exists("Pipfile")
      then: pipenv

    pyproject:
      when: file.exists("pyproject.toml")
      maybe: [poetry, pip]

    poetry:
      when: file.exists("poetry.lock")
      then: poetry

    bundler:
      when: file.glob("Gemfile*").size() > 0
      then: bundler

    gomod:
      when: file.exists("go.mod") || file.exists("go.sum")
      then: gomod

    cargo:
      when: file.exists("cargo.toml")
      then: cargo

    maven:
      when: file.exists("pom.xml")
      then: maven

    gradle:
      when: file.existsRegex(r"(build.gradle(\.kts)?|settings\.gradle|gradle\.properties|gradlew|gradlew\.bat)")
      then: gradle

    nuget:
      when: file.exists("packages.lock.json")
      then: nuget

    mix:
      when: file.exists("mix.exs")
      then: mix

    quicklisp:
      when: file.isDir("quicklisp")
      then: quicklisp
