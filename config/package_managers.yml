# Analyze package managers.
package_managers:
  max_depth: 2
  rules:
    npm-lockfile:
      when: fs.fileExists("package-lock.json")
      then: npm
      group: js
      exclusive: true
    yarn-lockfile:
      when: fs.fileExists("yarn.lock")
      then: yarn
      group: js
      exclusive: true
    meteor:
      when: fs.fileExists(".meteor/packages")
      then: meteor
      group: js
      exclusive: true
    pnpm:
      when: fs.fileExists("pnpm-lock.yaml") || fs.fileExists("pnpm-workspace.yaml")
      then: pnpm
      group: js
      exclusive: true
    bun:
      when: fs.fileExists("bun.lock") || fs.fileExists("bun.lockb")
      then: bun
      group: js
      exclusive: true
    js-packages:
      when: fs.fileExists("package.json")
      maybe: [npm, pnpm, yarn, bun]
      group: js

    composer:
      when: fs.fileExists("composer.json")
      then: composer

    pip:
      when: fs.fileExists("requirements.txt")
      then: pip

    pipenv:
      when: fs.fileExists("Pipfile")
      then: pipenv

    pyproject:
      when: fs.fileExists("pyproject.toml")
      maybe: [poetry, pip]

    poetry:
      when: fs.fileExists("poetry.lock")
      then: poetry

    bundler:
      when: fs.glob("Gemfile*").size() > 0
      then: bundler

    gomod:
      when: fs.fileExists("go.mod") || fs.fileExists("go.sum")
      then: gomod

    cargo:
      when: fs.fileExists("Cargo.toml")
      then: cargo

    maven:
      when: fs.fileExists("pom.xml")
      then: maven

    gradle:
      when: fs.fileExists("build.gradle") || fs.fileExists("build.gradle.kts")
      then: gradle

    nuget:
      when: fs.fileExists("packages.lock.json")
      then: nuget

    mix:
      when: fs.fileExists("mix.exs")
      then: mix

    quicklisp:
      when: fs.isDir("quicklisp")
      then: quicklisp
