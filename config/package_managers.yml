# Analyze package managers.
package_managers:
  rules:
  - name: npm-lockfile
    when: file.exists("package-lock.json")
    then: npm
    group: js
    exclusive: true
  - name: yarn-lockfile
    when: file.exists("yarn.lock")
    then: yarn
    group: js
    exclusive: true
  - name: pnpm-lockfile
    when: file.exists("pnpm-lock.yaml")
    then: pnpm
    group: js
    exclusive: true
  - name: bun-lockfile
    when: file.exists("bun.lock")
    then: bun
    group: js
    exclusive: true
  - name: js-packages
    when: file.exists("package.json")
    maybe: [npm, pnpm, yarn, bun]
    group: js

  - when: file.exists("composer.json")
    then: composer

  - when: file.exists("requirements.txt")
    then: pip
  - when: file.exists("Pipfile")
    then: pipenv
  - when: file.exists("pyproject.toml")
    maybe: [poetry, pip]
  - when: file.exists("poetry.lock")
    then: poetry

  - when: file.glob("Gemfile*").size() > 0
    then: bundler

  - when: file.exists("go.mod") || file.exists("go.sum")
    then: gomod

  - when: file.exists("cargo.toml")
    then: cargo

  - when: file.exists("pom.xml")
    then: maven
  - when: file.exists("build.gradle")
    then: gradle
  - when: file.exists("build.gradle.kts")
    then: gradle
  - when: file.exists("settings.gradle")
    then: gradle
  - when: file.exists("gradle.properties")
    then: gradle
  - when: file.exists("gradlew")
    then: gradle
  - when: file.exists("gradlew.bat")
    then: gradle

  - when: file.exists("packages.lock.json")
    then: nuget

  - when: file.exists("mix.exs")
    then: mix

  - when: file.isDir("quicklisp")
    then: quicklisp
